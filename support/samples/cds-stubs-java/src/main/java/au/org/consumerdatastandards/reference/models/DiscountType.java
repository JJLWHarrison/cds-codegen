/*
 * Consumer Data Standards
 * Client Reference Implementation for the Australian Consumer Data Standards to meet the needs of the Consumer Data Right
 
 * NOTE: This class is auto generated by the cds-codegen package
 * https://github.com/ConsumerDataStandardsAustralia/cds-codegen
 * Do not edit the class manually.
 */
package au.org.consumerdatastandards.reference.models;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The type of discount. See the next section for an overview of valid values
 * and their meaning
 */
@JsonAdapter(DiscountType.Adapter.class)
public enum DiscountType {

    BALANCE("BALANCE"),

    DEPOSITS("DEPOSITS"),

    ELIGIBILITY_ONLY("ELIGIBILITY_ONLY"),

    FEE_CAP("FEE_CAP"),

    PAYMENTS("PAYMENTS");

    private String value;

    DiscountType(String value) {
        this.value = value;
    }

    public String getValue() {
        return value;
    }

    @Override
    public String toString() {
        return String.valueOf(value);
    }

    public static DiscountType fromValue(String text) {
        for (DiscountType b : DiscountType.values()) {
            if (String.valueOf(b.value).equals(text)) {
                return b;
            }
        }
        return null;
    }

    public static class Adapter extends TypeAdapter<DiscountType> {
        @Override
        public void write(final JsonWriter jsonWriter, final DiscountType enumeration) throws IOException {
            jsonWriter.value(enumeration.getValue());
        }

        @Override
        public DiscountType read(final JsonReader jsonReader) throws IOException {
            String value = jsonReader.nextString();
            return DiscountType.fromValue(String.valueOf(value));
        }
    }
}
