/*
 * Consumer Data Standards
 * Client Reference Implementation for the Australian Consumer Data Standards to meet the needs of the Consumer Data Right
 
 * NOTE: This class is auto generated by the cds-codegen package
 * https://github.com/ConsumerDataStandardsAustralia/cds-codegen
 * Do not edit the class manually.
 */
package au.org.consumerdatastandards.reference.models;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * The type of rate (base, bonus, etc). See the next section for an overview of
 * valid values and their meaning
 */
@JsonAdapter(DepositRateType.Adapter.class)
public enum DepositRateType {

    BONUS("BONUS"),

    BUNDLE_BONUS("BUNDLE_BONUS"),

    FIXED("FIXED"),

    FLOATING("FLOATING"),

    INTRODUCTORY("INTRODUCTORY"),

    MARKET_LINKED("MARKET_LINKED"),

    VARIABLE("VARIABLE");

    private String value;

    DepositRateType(String value) {
        this.value = value;
    }

    public String getValue() {
        return value;
    }

    @Override
    public String toString() {
        return String.valueOf(value);
    }

    public static DepositRateType fromValue(String text) {
        for (DepositRateType b : DepositRateType.values()) {
            if (String.valueOf(b.value).equals(text)) {
                return b;
            }
        }
        return null;
    }

    public static class Adapter extends TypeAdapter<DepositRateType> {
        @Override
        public void write(final JsonWriter jsonWriter, final DepositRateType enumeration) throws IOException {
            jsonWriter.value(enumeration.getValue());
        }

        @Override
        public DepositRateType read(final JsonReader jsonReader) throws IOException {
            String value = jsonReader.nextString();
            return DepositRateType.fromValue(String.valueOf(value));
        }
    }
}
