/*
 * Consumer Data Standards
 * Client Reference Implementation for the Australian Consumer Data Standards to meet the needs of the Consumer Data Right
 
 * NOTE: This class is auto generated by the cds-codegen package
 * https://github.com/ConsumerDataStandardsAustralia/cds-codegen
 * Do not edit the class manually.
 */
package au.org.consumerdatastandards.reference.stubs.api;

import org.threeten.bp.OffsetDateTime;

import com.fasterxml.jackson.databind.ObjectMapper;

import au.org.consumerdatastandards.reference.models.ResponseBankingProductById;
import au.org.consumerdatastandards.reference.models.ResponseBankingProductList;
import io.swagger.annotations.*;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestParam;
import javax.validation.Valid;
import javax.servlet.http.HttpServletRequest;
import java.io.IOException;

@Controller
public class ProductApiController implements ProductApi {

    private static final Logger log = LoggerFactory.getLogger(ProductApiController.class);

    private final ObjectMapper objectMapper;

    private final HttpServletRequest request;

    @org.springframework.beans.factory.annotation.Autowired
    public ProductApiController(ObjectMapper objectMapper, HttpServletRequest request) {
        this.objectMapper = objectMapper;
        this.request = request;
    }

    @Override
    public ResponseEntity<ResponseBankingProductById> getProductDetail(@ApiParam(value = "ID of the specific product requested",required=true) @PathVariable("productId") String productId) {
        String accept = request.getHeader("Accept");
        if (accept != null && accept.contains("application/json")) {
            try {
                return new ResponseEntity<ResponseBankingProductById>(objectMapper.readValue("{  \"data\" : \"\",  \"meta\" : { },  \"links\" : {    \"self\" : \"http://example.com/aeiou\"  }}", ResponseBankingProductById.class), HttpStatus.NOT_IMPLEMENTED);
            } catch (IOException e) {
                log.error("Couldn't serialize response for content type application/json", e);
                return new ResponseEntity<ResponseBankingProductById>(HttpStatus.INTERNAL_SERVER_ERROR);
            }
        }

        return new ResponseEntity<ResponseBankingProductById>(HttpStatus.NOT_IMPLEMENTED);
    }

    @Override
    public ResponseEntity<ResponseBankingProductList> listProducts(@ApiParam(value = "Allows for the filtering of products based on whether the current time is within the period of time defined as effective by the effectiveFrom and effectiveTo fields. Valid values are ‘CURRENT’, ‘FUTURE’ and ‘ALL’. If absent defaults to &#39;CURRENT&#39;", allowableValues = "ALL, CURRENT, FUTURE", defaultValue = "CURRENT") @Valid @RequestParam(value = "effective", required = false, defaultValue="CURRENT") String effective,@ApiParam(value = "Only include products that have been updated after the specified date and time. If absent defaults to include all products") @Valid @RequestParam(value = "updated-since", required = false) OffsetDateTime updatedSince,@ApiParam(value = "Filter results based on a specific brand") @Valid @RequestParam(value = "brand", required = false) String brand,@ApiParam(value = "Used to filter results on the productCategory field applicable to accounts. Any one of the valid values for this field can be supplied. If absent then all accounts returned.", allowableValues = "CRED_AND_CHRG_CARDS, LEASES, MARGIN_LOANS, PERS_LOANS, REGULATED_TRUST_ACCOUNTS, RESIDENTIAL_MORTGAGES, TERM_DEPOSITS, TRADE_FINANCE, TRANS_AND_SAVINGS_ACCOUNTS, TRAVEL_CARDS") @Valid @RequestParam(value = "product-category", required = false) String productCategory,@ApiParam(value = "Page of results to request (standard pagination)", defaultValue = "1") @Valid @RequestParam(value = "page", required = false, defaultValue="1") Integer page,@ApiParam(value = "Page size to request. Default is 25 (standard pagination)", defaultValue = "25") @Valid @RequestParam(value = "page-size", required = false, defaultValue="25") Integer pageSize) {
        String accept = request.getHeader("Accept");
        if (accept != null && accept.contains("application/json")) {
            try {
                return new ResponseEntity<ResponseBankingProductList>(objectMapper.readValue("{  \"data\" : {    \"products\" : [ {      \"effectiveTo\" : \"2000-01-23T04:56:07.000+00:00\",      \"additionalInformation\" : {        \"eligibilityUri\" : \"http://example.com/aeiou\",        \"bundleUri\" : \"http://example.com/aeiou\",        \"feesAndPricingUri\" : \"http://example.com/aeiou\",        \"termsUri\" : \"http://example.com/aeiou\",        \"overviewUri\" : \"http://example.com/aeiou\"      },      \"lastUpdated\" : \"2000-01-23T04:56:07.000+00:00\",      \"brandName\" : \"brandName\",      \"isTailored\" : true,      \"productId\" : \"productId\",      \"name\" : \"name\",      \"description\" : \"description\",      \"applicationUri\" : \"http://example.com/aeiou\",      \"brand\" : \"brand\",      \"effectiveFrom\" : \"2000-01-23T04:56:07.000+00:00\",      \"productCategory\" : { }    }, {      \"effectiveTo\" : \"2000-01-23T04:56:07.000+00:00\",      \"additionalInformation\" : {        \"eligibilityUri\" : \"http://example.com/aeiou\",        \"bundleUri\" : \"http://example.com/aeiou\",        \"feesAndPricingUri\" : \"http://example.com/aeiou\",        \"termsUri\" : \"http://example.com/aeiou\",        \"overviewUri\" : \"http://example.com/aeiou\"      },      \"lastUpdated\" : \"2000-01-23T04:56:07.000+00:00\",      \"brandName\" : \"brandName\",      \"isTailored\" : true,      \"productId\" : \"productId\",      \"name\" : \"name\",      \"description\" : \"description\",      \"applicationUri\" : \"http://example.com/aeiou\",      \"brand\" : \"brand\",      \"effectiveFrom\" : \"2000-01-23T04:56:07.000+00:00\",      \"productCategory\" : { }    } ]  },  \"meta\" : {    \"totalRecords\" : 6,    \"totalPages\" : 0  },  \"links\" : {    \"next\" : \"http://example.com/aeiou\",    \"last\" : \"http://example.com/aeiou\",    \"prev\" : \"http://example.com/aeiou\",    \"self\" : \"http://example.com/aeiou\",    \"first\" : \"http://example.com/aeiou\"  }}", ResponseBankingProductList.class), HttpStatus.NOT_IMPLEMENTED);
            } catch (IOException e) {
                log.error("Couldn't serialize response for content type application/json", e);
                return new ResponseEntity<ResponseBankingProductList>(HttpStatus.INTERNAL_SERVER_ERROR);
            }
        }

        return new ResponseEntity<ResponseBankingProductList>(HttpStatus.NOT_IMPLEMENTED);
    }

}
