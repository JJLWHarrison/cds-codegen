/*
* Consumer Data Standards
* Client Reference Implementation for the Australian Consumer Data Standards to meet the needs of the Consumer Data Right

* NOTE: This class is auto generated by the cds-codegen package
* https://github.com/ConsumerDataStandardsAustralia/cds-codegen
* Do not edit the class manually.
*/
package $package;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

/**
* $class.SimpleName
*/
public class $class.SimpleName {
#foreach($field in $class.DeclaredFields)
    $field.setAccessible(true)
#end
#foreach($field in $class.DeclaredFields)
    @SerializedName("$field.Name")
    private $field.Type.SimpleName $field.Name
#end

#foreach($field in $class.DeclaredFields)
    public $field.Type.SimpleName get${display.capitalize($field.Name)} {
        return $field.Name
    }

    public void set$display.capitalize($field.Name)($field.Type.SimpleName $field.Name)} {
        this.$field.Name = $field.Name
    }
#end

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        $class.SimpleName $class.SimpleName.substring(0,1).toLowerCase()$class.SimpleName.substring(1) = ($class.SimpleName) o;
        return Objects.equals(this.self, links.self);
    }

    @Override
    public int hashCode() {
        return Objects.hash(self);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class $class.SimpleName {\n");
#foreach($field in $class.DeclaredFields)
        sb.append("    $field.Name: ").append(toIndentedString($field.Name)).append("\n");
#end    sb.append("}");
        return sb.toString();
    }

    /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
