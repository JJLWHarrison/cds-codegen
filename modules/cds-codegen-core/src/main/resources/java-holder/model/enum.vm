#include("java-holder/shared/header.vm")
package $packageName;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

/**
* $definitionName
* 
* #if($definitionDescription)
* $WordUtils.wrap($definitionDescription, 60, "
* ", false)
* #end
*/
public enum $definitionName {
#foreach($field in $fieldList)
    #parse("common/datadefinition.vm")
    $StringUtils.upperCase($fieldName)("$StringUtils.upperCase($fieldName)")#if( $foreach.hasNext ),#end#if(! $foreach.hasNext );#end
#end
    
    private String value;
    
    $definitionName(String value) {
      this.value = value;
    }
    
    @Override
    @JsonValue
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static $definitionName fromValue(String value) {
      for ($definitionName b : $definitionName.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
}
